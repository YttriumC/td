name: Build TDLib (Windows)
permissions:
  contents: write
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout current repository (instead of cloning td)
        uses: actions/checkout@v4
        with:
          path: td

      - name: Install dependencies (Chocolatey)
        shell: pwsh
        run: |
          # 安装 PHP, JDK
          #choco install -y php --version=8.2.12
          choco install -y openjdk11
          
          # 确保 cmake 和 git 已安装（GitHub Actions 自带，但强制装下最新）
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Check environment
        shell: pwsh
        run: |
          php -v
          javac -version
          cmake --version
          git --version

      - name: Clone vcpkg
        shell: pwsh
        run: |
          cd td
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          git checkout bc3512a509f9d29b37346a7e7e929f9a26e66c7e
          $env:VCPKG_DOWNLOAD_TIMEOUT = 600
          $env:VCPKG_OVERRIDE_DOWNLOAD_URLS = @(
          "gperf;https://github.com/lattera/gperf/releases/download/gperf-3.1/gperf-3.1.tar.gz"
          )
          ./bootstrap-vcpkg.bat
          $retries = 3
          for ($i=0; $i -lt $retries; $i++) {
                  try {
                      Write-Host "Installing $pkg..."
                      ./vcpkg.exe install gperf:x64-windows openssl:x64-windows zlib:x64-windows
                      break
                  } catch {
                      Write-Host "Install failed, retrying in 2s..."
                      Start-Sleep -Seconds 2
                  }
              }

      - name: Build TDLib
        shell: pwsh
        run: |
          cd td
          Remove-Item build -Force -Recurse -ErrorAction SilentlyContinue
          mkdir build
          cd build
          cmake -A x64 -DCMAKE_INSTALL_PREFIX:PATH=../example/java/td -DTD_ENABLE_JNI=ON -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../vcpkg/scripts/buildsystems/vcpkg.cmake ..
          cmake --build . --target install --config Debug

      - name: Build Java Example
        shell: pwsh
        run: |
          cd td/example/java
          Remove-Item build -Force -Recurse -ErrorAction SilentlyContinue
          mkdir build
          cd build
          cmake -A x64 -DCMAKE_INSTALL_PREFIX:PATH=../../../tdlib -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../../../vcpkg/scripts/buildsystems/vcpkg.cmake -DTd_DIR:PATH=$(Resolve-Path ../td/lib/cmake/Td) ..
          cmake --build . --target install --config Debug

      - name: Show build output
        shell: pwsh
        run: |
          dir td/tdlib

      - name: Copy Java example to source folder
        shell: pwsh
        run: |
          $sourceDir = "td/tdlib/source"
          if (-Not (Test-Path $sourceDir)) {
              New-Item -ItemType Directory -Path $sourceDir
          }

          $exampleDir = "td/example/java"
          Copy-Item "$exampleDir\*" $sourceDir -Recurse -Force

      - name: Get Date
        id: builddate
        run: echo "date=$(Get-Date -Format 'yyyy-MM-dd')" >> $env:GITHUB_OUTPUT
        shell: pwsh
      - name: Archive TDLib
        shell: pwsh
        run: |
          Compress-Archive -Path td/tdlib/* -DestinationPath tdlib-windows.zip
          
      - name: Create Release and Upload TDLib
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.builddate.outputs.date }}
          name: ${{ steps.builddate.outputs.date }}
          body: "Automated build for ${{ steps.builddate.outputs.date }}"
          files: tdlib-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
